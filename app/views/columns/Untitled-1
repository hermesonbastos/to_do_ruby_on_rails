// app/views/labels/_list.html.erb

<div class="flex flex-col p-2">
  <% labels.each do |label| %>
    <%= render 'labels/item', label: label %>
  <% end %>

  <button
    type="button"
    class="badge badge-outline badge-sm m-1 flex items-center justify-center"
    data-action="click->labels#showNewForm"
  >
    <i class="fa fa-plus"></i>
  </button>
</div>

<template id="new-label-form-template">
  <%= render partial: 'labels/form', locals: { board: board } %>
</template>

<div data-labels-target="form"></div>


// app/views/labels/_task_labels.html.erb

<div class="flex flex-wrap gap-2 mb-2">
  <% task.labels.each do |label| %>
    <div class="badge badge-<%= label.color %> flex items-center gap-1">
      <span><%= label.title %></span>
      <button type="button"
              class="ml-1 text-xs"
              data-action="click->task-labels#removeLabel"
              data-task-id="<%= task.id %>"
              data-label-id="<%= label.id %>">
        <i class="fa-solid fa-times"></i>
      </button>
    </div>
  <% end %>
</div>

// app/views/labels/_task_labels_container.html.erb

<div class="task-labels-list mb-4"
     id="task_labels_<%= task.id %>"
     data-task-labels-target="labelsList">
  <%= render partial: "labels/task_labels", locals: { task: task } %>
</div>


// app/views/labels/add_to_task.turbo_stream.erb

<%= turbo_stream.replace "task_labels_#{@task.id}" do %>
  <%= render partial: "labels/task_labels_container", locals: { task: @task } %>
<% end %>

<%= turbo_stream.replace "available_labels_#{@task.id}" do %>
  <%= render partial: "labels/available_labels",
             locals: { board: @task.column.board, task: @task } %>
<% end %>


// app/views/tasks/show.turbo_stream.erb

<%= turbo_stream.replace "task_modal_container" do %>
  <div
    id="task_modal_<%= @task.id %>"
    class="modal modal-open"
    data-controller="modal"
    data-modal-remove-on-close="true"
    data-action="turbo:submit-end->modal#afterSubmit"
  >
    <div class="modal-box w-11/12 max-w-5xl">
      <h3 class="font-bold text-lg">Editar tarefa</h3>
      <div id="edit_task_errors"></div>
      <%= render 'tasks/form', column: @column, task: @task %>
    </div>
  </div>
<% end %>

// app/views/tasks/move.turbo_stream.erb

<%= turbo_stream.remove @task %>

<% if @old_column.tasks.reload.none? %>
  <%= turbo_stream.append "column_#{@old_column.id}_tasks" do %>
    <div id="no_tasks_text_<%= @old_column.id %>" class="text-center text-gray-400 py-4">
      Sem tarefas
    </div>
  <% end %>
<% end %>

<%= turbo_stream.append "column_#{@new_column.id}_tasks" do %>
  <%= render partial: "tasks/task", locals: { task: @task } %>
<% end %>

<% if @new_column.tasks.count == 1 %>
  <%= turbo_stream.remove "no_tasks_text_#{@new_column.id}" %>
<% end %>

// app/javascript/controllers/modal_controller.js

import { Controller } from "@hotwired/stimulus"

export default class extends Controller {
  connect() {
    this.element.addEventListener('click', (event) => {
      if (event.target === this.element) {
        this.close();
      }
    });
  }

  open() {
    this.element.classList.add('modal-open');
  }

  afterSubmit() {
    this.close();
  }

  close() {
    this.element.classList.remove('modal-open');
    
    if (this.element.dataset.modalRemoveOnClose === "true") {
      setTimeout(() => this.element.remove(), 150);
    }
  }

  cancel(event) {
    event.preventDefault();
    this.close();
  }
}

// app/views/layouts/application.html.erb

<!DOCTYPE html>
<html data-controller="theme" data-theme="<%= @theme %>">
  <head>
    <title><%= content_for(:title) || "To Do" %></title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= yield :head %>

    <%# Enable PWA manifest for installable apps (make sure to enable in config/routes.rb too!) %>
    <%#= tag.link rel: "manifest", href: pwa_manifest_path(format: :json) %>

    <link rel="icon" href="/icon.png" type="image/png">
    <link rel="icon" href="/icon.svg" type="image/svg+xml">
    <link rel="apple-touch-icon" href="/icon.png">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">

    <%# Includes all stylesheet files in app/assets/stylesheets %>
    <%= stylesheet_link_tag "tailwind", "data-turbo-track": "reload" %>
    <%= javascript_importmap_tags %>
  </head>

  <body class="min-h-screen flex flex-col pt-8 bg-base-300">
    <main class="w-full flex-grow full-width-container">
      <%= yield %>
    </main>
    <div id="task_modal_container"></div>
  </body>
</html>


// app/views/tasks/_errors.html.erb

<% if task.errors.any? %>
  <div class="alert alert-error mb-4">
    <ul>
      <% task.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
    </ul>
  </div>
<% end %>

// app/controllers/tasks_controller.rb

class TasksController < ApplicationController
  before_action :require_login
  before_action :set_column
  before_action :set_task, only: [:show, :update, :destroy]

  def create
    @task = @column.tasks.build(task_params)

    if @task.save
      if params[:task][:label_ids].present?
        @task.label_ids = params[:task][:label_ids]
      end

      respond_to do |format|
        format.html { redirect_to board_path(@column.board) }
        format.turbo_stream
      end
    else
      respond_to do |format|
        format.html { redirect_to board_path(@column.board), alert: "Erro ao criar tarefa" }
        format.turbo_stream { render turbo_stream: turbo_stream.replace("new_task_errors", partial: "tasks/errors", locals: { task: @task }) }
      end
    end
  end

  def show
    respond_to do |format|
      format.turbo_stream
    end
  end

  def update
    if @task.update(task_params)
      respond_to do |format|
        format.html { redirect_to board_path(@column.board) }
        format.turbo_stream
      end
    else
      respond_to do |format|
        format.html { redirect_to board_path(@column.board), alert: "Erro ao atualizar tarefa" }
        format.turbo_stream { render turbo_stream: turbo_stream.replace("edit_task_errors", partial: "tasks/errors", locals: { task: @task }) }
      end
    end
  end

  def destroy
    @column = @task.column
    @task_id = @task.id
    @task.destroy

    respond_to do |format|
      format.html { redirect_to board_path(@column.board) }
      format.turbo_stream
    end
  end

  def reorder
    params[:task_ids].each_with_index do |id, index|
      Task.where(id: id).update_all(position: index)
    end

    head :ok
  end

  def move
    @task = Task.find(params[:id])
    @old_column = @task.column
    @new_column = Column.find(params[:target_column_id])

    @task.update(
      column: @new_column,
      position: @new_column.tasks.maximum(:position).to_i + 1
    )

    respond_to do |format|
      format.html { redirect_to board_path(@new_column.board) }
      format.turbo_stream
    end
  end

  private

  def set_column
    @column = Column.find(params[:column_id])
  end

  def set_task
    @task = @column.tasks.find(params[:id])
  end

  def task_params
    params.require(:task).permit(:title, :description, :difficulty, :due_date, :position, label_ids: [])
  end
end


// app/controllers/labels_controller.rb

class LabelsController < ApplicationController
  before_action :require_login
  before_action :set_board, only: [ :index, :create ]
  before_action :set_task, only: [ :add_to_task, :remove_from_task ]

  def index
    @labels = @board.labels
    @task = Task.find(params[:task_id]) if params[:task_id].present?

    respond_to do |format|
      format.html
      format.turbo_stream
    end
  end

  def create
    @label = @board.labels.build(label_params)

    if @label.save
      respond_to do |format|
        format.turbo_stream
        format.html { redirect_to board_path(@board) }
      end
    else
      respond_to do |format|
        format.turbo_stream do
          render turbo_stream: turbo_stream.replace(
            "new_label_form",
            partial: "labels/form",
            locals: { label: @label, board: @board }
          )
        end

        format.html { head :unprocessable_entity }
      end
    end
  end

  def add_to_task
    @label = Label.find(params[:id])

    unless @task.labels.include?(@label)
      @task.labels << @label
    end

    @task.labels.reload
    respond_to do |format|
      format.html { redirect_to board_path(@task.column.board), notice: "Etiqueta adicionada com sucesso." }
      format.turbo_stream
    end
  end

  def remove_from_task
    @label = Label.find(params[:id])
    @task.labels.delete(@label)
    @task.labels.reload
    respond_to do |format|
      format.html { redirect_to board_path(@task.column.board), notice: "Etiqueta removida com sucesso." }
      format.turbo_stream
    end
  end

  private

  def set_board
    @board = Board.find(params[:board_id])
  end

  def set_task
    @task = Task.find(params[:task_id])
  end

  def label_params
    params.require(:label).permit(:title, :color)
  end
end


// app/javascript/controllers/task_labels_controller.js

import { Controller } from "@hotwired/stimulus"

export default class extends Controller {
  static targets = ["labelsList", "labelSelector", "addButton", "newLabelForm", "availableLabelsList"]
  
  connect() {}
  
  showLabelSelector(event) {
    event.preventDefault()
    
    const taskId = this.addButtonTarget.dataset.taskId
    const boardId = this.addButtonTarget.dataset.boardId
    
    if (!taskId) {
      alert("Salve a tarefa primeiro para adicionar etiquetas.")
      return
    }
    
    fetch(`/boards/${boardId}/labels?task_id=${taskId}`, {
      headers: {
        "Accept": "text/vnd.turbo-stream.html"
      }
    })
    .then(response => response.text())
    .then(html => {
      Turbo.renderStreamMessage(html);
      this.labelSelectorTarget.classList.remove("hidden");
    });
  }
  
  showNewLabelForm() {
    this.newLabelFormTarget.classList.remove("hidden")
    this.availableLabelsListTarget.classList.add("hidden")
  }

  cancelNewLabelForm() {
    this.newLabelFormTarget.classList.add("hidden")
    this.availableLabelsListTarget.classList.remove("hidden")
  }
  
  addLabel(event) {
    const taskId = event.currentTarget.dataset.taskId
    const labelId = event.currentTarget.dataset.labelId
    
    fetch(`/tasks/${taskId}/labels/${labelId}/add_to_task`, {
      method: "POST",
      headers: {
        "Accept": "text/vnd.turbo-stream.html",
        "X-CSRF-Token": document.querySelector("meta[name='csrf-token']").content
      }
    })
    .then(response => response.text())
    .then(html => {
      Turbo.renderStreamMessage(html)
      this.showLabelSelector(new Event("click"))
    })
  }
  
  removeLabel(event) {
    const taskId = event.currentTarget.dataset.taskId
    const labelId = event.currentTarget.dataset.labelId
    
    fetch(`/tasks/${taskId}/labels/${labelId}/remove_from_task`, {
      method: "DELETE",
      headers: {
        "Accept": "text/vnd.turbo-stream.html",
        "X-CSRF-Token": document.querySelector("meta[name='csrf-token']").content
      }
    })
    .then(response => response.text())
    .then(html => {
      Turbo.renderStreamMessage(html)
      if (!this.labelSelectorTarget.classList.contains("hidden")) {
        this.showLabelSelector(new Event("click"))
      }
    })
  }
  
  labelCreated(event) {
    event.stopPropagation();

    const { success } = event.detail[0] || { success: false }

    this.newLabelFormTarget.classList.add("hidden");
    this.availableLabelsListTarget.classList.remove("hidden");

    if (success !== false) {
      this.showLabelSelector(new Event("click"));
    }
  }
}

// app/views/boards/show.html.erb

<div class="full-width-container">
  <%= render 'shared/navbar' %>
  <div class="w-full h-32 md:h-40 lg:h-48 mb-6 pt-4 md:pt-6 overflow-hidden">
    <% if @board.banner.present? %>
      <img  src="data:image/*;base64,<%= @board.banner %>"
            alt="<%= @board.name %>"
            class="w-full h-full object-cover rounded-lg">
    <% else %>
      <%= image_tag "default_board_banner.webp",
                    alt: @board.name,
                    class: "w-full h-full object-cover rounded-lg" %>
    <% end %>
  </div>

  <div class="px-2 w-full pb-8">
    <div class="flex flex-col">
      <div class="flex flex-col gap-4">
        <div class="badge badge-neutral">
          Criado em <%= @board.created_at.strftime("%d/%m/%Y") %>
        </div>
        <h1 class="text-3xl font-bold"><%= @board.name %></h1>
        <% if @board.try(:description).present? %>
          <p class="mb-6"><%= @board.description %></p>
        <% end %>
      </div>
      
      <div data-controller="column-creator">
        <div id="column-creator-actions" data-column-creator-target="button" class="flex flex-col md:flex-row gap-4">
          <button class="btn flex btn-accent gap-2" 
                  data-action="click->column-creator#showForm"
                  >
            <i class="fa-solid fa-plus"></i>
            <p>Nova coluna</p>
          </button>
          <% unless @board.columns.exists?(is_done_column: true) %>
            <div id="done-column-alert" class="alert alert-outline alert-info shadow-sm px-3 py-2 text-sm gap-2">
              <i class="fa-solid fa-circle-info"></i>
              <span class="text-base-content">Defina a(s) coluna(s) de tarefas concluídas, isso nos ajuda a metrificar seus resultados.</span>
            </div>
          <% end %>
        </div>
        
        <div class="hidden" data-column-creator-target="form">
          <%= render 'columns/form', board: @board %>
        </div>
      </div>   
    </div> 
  </div>
  
  <turbo-frame id="board-columns-frame">
    <div id="board-columns" 
      class="flex gap-4 overflow-x-auto pb-4 w-full" 
      data-controller="horizontal-scroll sortable"
      data-sortable-group-value="columns"
      data-sortable-reorder-url-value="<%= reorder_board_columns_path(@board) %>"
      style="scrollbar-width: thin;">
      <%= render partial: 'columns/column', collection: @board.columns.order(:position) %>
    </div>
  </turbo-frame>
</div>

// app/views/columns/_column.html.erb

<div
  id="<%= dom_id(column) %>" 
  data-column-id="<%= column.id %>"
  class="card column relative shadow-sm bg-base-100 w-70 min-h-100 flex-shrink-0 <%= 'border border-green-300' if column.is_done_column %>" 
  data-controller="column-editor column-settings"
  data-column-settings-board-id-value="<%= column.board_id %>"
  data-column-settings-column-id-value="<%= column.id %>"
  data-column-settings-current-position-value="<%= column.position %>"
>
  <div class="flex justify-between items-center p-3 pb-0">
    <div class="flex items-center gap-2">
      <!--<div class="column-handle cursor-move mr-1 text-xs text-gray-400 hover:text-gray-600">
        <i class="fa-solid fa-grip-vertical"></i>
      </div> -->
      
      <div data-column-editor-target="display" class="flex items-center gap-2">
        <h3 class="text-md text-center font-semibold"><%= column.name %></h3>
        <button data-action="click->column-editor#showEdit" class="text-xs cursor-pointer">
          <i class="fa-solid fa-pen-to-square text-md"></i>
        </button>
      </div>
      
      <%= form_with model: [column.board, column],
              class: "hidden flex items-center gap-2",
              data: { column_editor_target: "form", action: "focusout->column-editor#hideEdit" } do |f| %>

        <%= f.text_field :name,
                        class: "input input-sm input-bordered w-full",
                        data: {
                          column_editor_target: "input",
                          action: "keydown->column-editor#handleKeydown focusout->column-editor#hideEdit"
                        } %>

        <button type="submit"
                class="btn btn-sm btn-success">
          <i class="fa-solid fa-check"></i>
        </button>
      <% end %>
    </div>
    
    <div class="flex items-center gap-2">
      <div class="dropdown dropdown-end">
        <button tabindex="0" class="btn btn-ghost btn-xs" data-column-settings-target="settingsButton">
          <i class="fa-solid fa-gear"></i>
        </button>
        <ul tabindex="0" class="dropdown-content z-[1] menu p-2 shadow bg-base-100 rounded-box w-52 mr-[-100px]">
          <li>
            <div class="form-control">
              <label class="label cursor-pointer">
                <span class="label-text">Coluna Done</span>
                <%= form_with model: [column.board, column], 
                            class: "toggle-form",
                            data: { turbo: "false", action: "change->column-settings#toggleDoneColumn" } do |f| %>
                  <%= f.check_box :is_done_column, 
                                class: "toggle toggle-primary", 
                                checked: column.is_done_column,
                                data: { column_settings_target: "doneToggle" } %>
                <% end %>
              </label>
            </div>
          </li>
          <%# <li>
            <a href="#"
              data-action="click->column-settings#togglePositionDropdown"
              class="justify-between">
              Posição
              <i class="fa-solid fa-angle-right"></i>
            </a>
            <ul data-column-settings-target="positionMenu"
                class="menu dropdown-content bg-base-100 p-2 rounded-box shadow absolute left-20 top-0 hidden">
            </ul>
          </li> %>
          <li>
            <a href="#" data-action="click->column-settings#confirmDelete" class="text-error">
              <i class="fa-solid fa-trash"></i> Excluir coluna
            </a>
          </li>
        </ul>
      </div>
      
      <button
        data-action="click->modal#open"
        data-modal-target="modal"
        data-modal-id-param="new_task_modal_<%= column.id %>"
        data-column-editor-target="newTaskButton" 
        class="badge transition-all cursor-pointer hover:shadow-md badge-primary text-slate-200 flex p-3 items-center rounded-sm"
      >
        <i class="fa-solid fa-plus"></i>
        <p class="mb-1">tarefa</p>
      </button>
    </div>
  </div>
  
  <div class="flex flex-col p-2 gap-2 tasks-container" 
     id="column_<%= column.id %>_tasks"
     data-column-id="<%= column.id %>"
     data-controller="sortable"
     data-sortable-group-value="tasks"
     data-sortable-url-value="<%= reorder_column_tasks_path(column) %>"
     data-sortable-column-id-value="<%= column.id %>">
  <% if column.tasks.any? %>
    <%= render partial: 'tasks/task', collection: column.tasks.order(:position) %>
  <% else %>
    <div id="no_tasks_text_<%= column.id %>" class="text-center text-gray-400 py-4">
      Sem tarefas
    </div>
  <% end %>
</div>
  
  <div id="delete_column_modal_<%= column.id %>" class="modal">
    <div class="modal-box">
      <h3 class="font-bold text-lg">Confirmar exclusão</h3>
      <p class="py-4">
        Tem certeza que deseja excluir a coluna "<%= column.name %>"?
        <% if column.tasks.any? %>
          Todas as <%= column.tasks.count %> tarefas desta coluna também serão excluídas.
        <% end %>
      </p>
      <div class="modal-action">
        <form method="dialog">
          <button class="btn btn-ghost">Cancelar</button>
        </form>
        <%= button_to [column.board, column], 
                    method: :delete, 
                    class: "btn btn-error",
                    form: { data: { turbo_confirm: false } } do %>
          Excluir
        <% end %>
      </div>
    </div>
  </div>
  
  <div
    id="new_task_modal_<%= column.id %>"
    class="modal"
    data-controller="modal"
    data-action="turbo:submit-end->modal#afterSubmit"
  >
    <div class="modal-box w-11/12 max-w-5xl">
      <h3 class="font-bold text-lg">Nova tarefa</h3>
      <div id="new_task_errors"></div>
      <%= render 'tasks/form', column: column, task: Task.new %>
    </div>
  </div>
</div>

// app/views/tasks/create.turbo_stream.erb

<% if @column.tasks.count == 1 %>
  <%= turbo_stream.replace "column_#{@column.id}_tasks" do %>
    <div class="flex flex-col p-2 gap-2 tasks-container"
       id="column_<%= @column.id %>_tasks"
       data-column-id="<%= @column.id %>"
       data-controller="sortable"
       data-sortable-group-value="tasks"
       data-sortable-url-value="<%= reorder_column_tasks_path(@column) %>"
       data-sortable-column-id-value="<%= @column.id %>">
      <%= render partial: 'tasks/task', locals: { task: @task } %>
    </div>
  <% end %>
<% else %>
  <%= turbo_stream.append "column_#{@column.id}_tasks" do %>
    <%= render partial: "tasks/task", locals: { task: @task } %>
  <% end %>
<% end %>

// app/views/tasks/_task.html.erb

<div id="<%= dom_id(task) %>" 
     data-task-id="<%= task.id %>"
     class="p-4 rounded-md bg-base-300 shadow-sm transition hover:cursor-pointer border border-base-200 hover:shadow-md hover:border-base-300 relative task-card task"
     data-controller="task-actions"
     data-action="click->task-actions#showTask">
  
  <button class="absolute top-3 right-3 text-sm text-gray-500 hover:text-error" 
          data-action="click->task-actions#confirmDelete click->task-actions#stopPropagation">
    <i class="fa-solid fa-trash"></i>
  </button>
  
  <div>
    <p class="font-semibold text-lg"><%= task.title %></p>
    <% if task.due_date.present? %>
      <p class="text-xs mt-1">
        <i class="fa-regular fa-calendar"></i> <%= task.due_date_formatted %>
      </p>
    <% end %>
    
    <% if task.labels.any? %>
      <div class="flex flex-wrap gap-1 mt-2">
        <% task.labels.each do |label| %>
          <span class="badge badge-<%= label.color %> badge-sm"><%= label.title %></span>
        <% end %>
      </div>
    <% end %>
    
    <div class="flex justify-between items-center mt-3">
      <span class="badge badge-sm <%= task_difficulty_class(task.difficulty) %>">
        <%= task.difficulty_label %>
      </span>
    </div>
  </div>
  
  <dialog
    id="delete_task_modal_<%= task.id %>"
    class="modal"
    data-controller="modal"
    data-action="turbo:submit-end->modal#afterSubmit"
  >
    <div class="modal-box">
      <h3 class="font-bold text-lg">Confirmar exclusão</h3>
      <p class="py-4">
        Tem certeza que deseja excluir a tarefa "<%= task.title %>"?
      </p>
      <div class="modal-action">
        <button
          type="button"
          class="btn btn-ghost"
          data-action="modal#cancel"
        >
          Cancelar
        </button>
        <%= button_to [task.column, task],
            method: :delete,
            class: "btn btn-error",
            form: { data: { turbo_confirm: "" } } do %>
          Excluir
        <% end %>
      </div>
    </div>
  </dialog>
</div>

// app/views/tasks/_form.html.erb

<%= form_with model: [column, task], class: "mt-4" do |f| %>
  <div class="flex gap-4">
    <div class="w-2/3">
      <div class="form-control mb-4">
        <%= f.label :title, "Título", class: "label" %>
        <%= f.text_field :title, class: "input input-bordered w-full", placeholder: "Título da tarefa" %>
      </div>
      
      <div class="form-control mb-4">
        <%= f.label :description, "Descrição", class: "label" %>
        <%= f.text_area :description, class: "textarea textarea-bordered w-full", placeholder: "Descrição da tarefa", rows: 3 %>
      </div>
      
      <div class="form-control mb-4">
        <%= f.label :difficulty, "Tamanho", class: "label" %>
        <div class="flex gap-4">
          <% Task::DIFFICULTY_LABELS.each do |value, label| %>
            <label class="label cursor-pointer gap-2">
              <%= f.radio_button :difficulty, value, class: "radio radio-primary" %>
              <span class="label-text"><%= label %></span>
            </label>
          <% end %>
        </div>
      </div>
      
      <div class="form-control mb-4">
        <%= f.label :due_date, "Data de vencimento", class: "label" %>
        <div class="flex gap-2">
          <%= f.date_field :due_date, class: "input input-bordered w-full" %>
          <%= f.time_field :due_date, class: "input input-bordered w-full" %>
        </div>
      </div>
    </div>
    
    <div class="w-1/3 border-l pl-4" data-controller="task-labels">
      <h4 class="font-semibold mb-2">Etiquetas</h4>
      
      <% if task.persisted? %>
        <div class="task-labels-list mb-4" data-task-labels-target="labelsList" id="task_labels_<%= task.id %>">
          <%= render partial: "labels/task_labels", locals: { task: task } %>
        </div>
        
        <button type="button" 
                class="badge badge-outline badge-neutral flex items-center gap-1 cursor-pointer"
                data-action="click->task-labels#showLabelSelector"
                data-task-labels-target="addButton"
                data-task-id="<%= task.id %>"
                data-board-id="<%= column.board_id %>">
          <i class="fa-solid fa-plus"></i>
          <span>Adicionar etiqueta</span>
        </button>
        
        <div class="hidden mt-4" data-task-labels-target="labelSelector" id="label_selector_<%= task.id %>">
          <!-- Será preenchido via AJAX -->
        </div>
      <% else %>
        <p class="text-gray-400 text-sm mb-4">Etiquetas poderão ser adicionadas após criar a tarefa.</p>
        
        <div class="text-xs text-gray-500">
          <i class="fa-solid fa-info-circle"></i>
          Crie a tarefa primeiro para adicionar etiquetas.
        </div>
      <% end %>
    </div>
  </div>
  
  <div class="flex gap-2 justify-end mt-4">
    <% if task.persisted? %>
      <form
        action="<%= column_task_path(column, task) %>"
        method="post"
        data-turbo-confirm=""
        class="inline"
      >
        <input type="hidden" name="_method" value="delete">
        <button class="btn btn-ghost btn-error" type="submit">
          <i class="fa-solid fa-trash"></i>
        </button>
      </form>
    <% end %>

    <button
      type="button"
      class="btn btn-ghost"
      data-action="click->modal#cancel"
    >
      Cancelar
    </button>

    <div class="form-control">
      <%= f.submit task.persisted? ? "Salvar" : "Criar", class: "btn btn-primary" %>
    </div>
  </div>
<% end %>

// app/views/labels/create.turbo_stream.erb

<%= turbo_stream.append "available_labels_#{params[:task_id]}" do %>
  <button type="button"
          class="badge badge-<%= @label.color %> flex items-center justify-between p-2 cursor-pointer"
          data-action="click->task-labels#addLabel"
          data-task-id="<%= params[:task_id] %>"
          data-label-id="<%= @label.id %>">
    <%= @label.title %>
    <i class="fa-solid fa-plus"></i>
  </button>
<% end %>

<%= turbo_stream.replace "new_label_form" do %>
  <div id="new_label_form"></div>
<% end %>

// app/views/labels/remove_from_task.turbo_stream.erb

<%= turbo_stream.replace "task_labels_#{@task.id}" do %>
  <%= render partial: "labels/task_labels_container", locals: { task: @task } %>
<% end %>

<%= turbo_stream.replace "available_labels_#{@task.id}" do %>
  <%= render partial: "labels/available_labels",
             locals: { board: @task.column.board, task: @task } %>
<% end %>


// app/views/labels/index.turbo_stream.erb

<%= turbo_stream.update "label_selector_#{params[:task_id]}" do %>
  <div class="bg-base-200 p-3 rounded-md" data-controller="task-labels">
    
    <div data-task-labels-target="availableLabelsList">
      <h5 class="font-semibold mb-2">Etiquetas disponíveis</h5>

      <div class="max-h-40 overflow-y-auto mb-3"
          id="available_labels_<%= @task.id %>">
        <%= render partial: "labels/available_labels",
                  locals: { board: @board, task: @task } %>
      </div>

      <div class="border-t pt-2">
        <button type="button" 
                class="text-sm text-primary flex items-center gap-1"
                data-action="click->task-labels#showNewLabelForm"
                data-task-labels-target="createButton">
          <i class="fa-solid fa-plus"></i>
          <span>Criar nova etiqueta</span>
        </button>
      </div>
    </div>

    <div class="hidden" data-task-labels-target="newLabelForm">
      <h5 class="font-semibold mb-2">Nova etiqueta</h5>
      <%= form_with model: Label.new,
                    url: board_labels_path(@board),
                    local: false,
                    data: {
                      action: "turbo:submit-end->task-labels#labelCreated",
                      turbo_stream: true } do |f| %>

        <div class="form-control mb-2">
          <%= f.text_field :title, class: "input input-sm input-bordered w-full", placeholder: "Nome da etiqueta" %>
        </div>

        <div class="form-control mb-2">
          <label class="label">Cor</label>
          <div class="flex flex-wrap gap-2">
            <% %w[primary secondary accent info success warning error neutral].each do |color| %>
              <label class="cursor-pointer">
                <%= f.radio_button :color, color, class: "hidden" %>
                <div class="badge rounded-full w-6 h-6 badge-<%= color %> p-2 badge-color-selector"></div>
              </label>
            <% end %>
          </div>
        </div>

        <div class="flex justify-between">
          <button type="button"
                  class="btn btn-sm btn-ghost"
                  data-action="click->task-labels#cancelNewLabelForm">
            Cancelar
          </button>

          <%= f.submit "Criar", class: "btn btn-sm btn-primary" %>
        </div>
      <% end %>
    </div>

  </div>
<% end %>


// app/views/labels/_available_labels.html.erb

<% available_labels = board.labels.where.not(id: task.labels.pluck(:id)) %>

<% if available_labels.any? %>
  <div class="flex flex-wrap gap-1">
    <% available_labels.each do |label| %>
      <button type="button"
              class="badge badge-<%= label.color %> flex items-center justify-between p-2 cursor-pointer"
              data-action="click->task-labels#addLabel"
              data-task-id="<%= task.id %>"
              data-label-id="<%= label.id %>">
        <%= label.title %>
        <i class="fa-solid fa-plus"></i>
      </button>
    <% end %>
  </div>
<% else %>
  <p class="text-gray-400 text-sm">Sem etiquetas disponíveis</p>
<% end %>


